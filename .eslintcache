[{"C:\\projects\\react\\reviewForm\\reviewform\\src\\index.js":"1","C:\\projects\\react\\reviewForm\\reviewform\\src\\App.js":"2","C:\\projects\\react\\reviewForm\\reviewform\\src\\reportWebVitals.js":"3","C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\Redux\\actions.js":"4","C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\Redux\\reducers\\rootReducer.js":"5","C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\Redux\\types.js":"6","C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\Redux\\reducers\\formReducer.js":"7","C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\Redux\\reducers\\listReducer.js":"8","C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\functions\\serverFunctions.js":"9","C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\Reviews.tsx":"10","C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\ReviewList.tsx":"11","C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\ReviewForm.tsx":"12","C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\ReviewListItem.tsx":"13"},{"size":500,"mtime":1606202807103,"results":"14","hashOfConfig":"15"},{"size":226,"mtime":1612274641286,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1606202807103,"results":"17","hashOfConfig":"15"},{"size":1105,"mtime":1612340267660,"results":"18","hashOfConfig":"15"},{"size":228,"mtime":1612341028920,"results":"19","hashOfConfig":"15"},{"size":344,"mtime":1612275662675,"results":"20","hashOfConfig":"15"},{"size":1100,"mtime":1612340729990,"results":"21","hashOfConfig":"15"},{"size":3183,"mtime":1612355592775,"results":"22","hashOfConfig":"15"},{"size":1646,"mtime":1612355234185,"results":"23","hashOfConfig":"15"},{"size":1635,"mtime":1612360147346,"results":"24","hashOfConfig":"15"},{"size":1188,"mtime":1612359938976,"results":"25","hashOfConfig":"15"},{"size":3330,"mtime":1612358863825,"results":"26","hashOfConfig":"15"},{"size":657,"mtime":1612357812631,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"knagep",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"C:\\projects\\react\\reviewForm\\reviewform\\src\\index.js",[],["58","59"],"C:\\projects\\react\\reviewForm\\reviewform\\src\\App.js",[],"C:\\projects\\react\\reviewForm\\reviewform\\src\\reportWebVitals.js",[],"C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\Redux\\actions.js",[],"C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\Redux\\reducers\\rootReducer.js",[],"C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\Redux\\types.js",[],"C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\Redux\\reducers\\formReducer.js",[],"C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\Redux\\reducers\\listReducer.js",["60"],"import {  DELETE_REVIEW,ADD_TO_REVIEW_LIST, LOAD_REVIEW_LIST, EDIT_REVIEW_DONE } from \"../types\"\r\nimport {addReviewToServer, removeReviewFromServer, editReviewOnServer, getReviewsFromServer, randomString} from '../../functions/serverFunctions'\r\n\r\nconst  initialState = {\r\n        reviews: []\r\n    }\r\n\r\nexport function listReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case LOAD_REVIEW_LIST: \r\n            return{\r\n                ...state, \r\n                reviews:\r\n                    state.reviews = action.payload\r\n            }\r\n        case ADD_TO_REVIEW_LIST:\r\n            let reviewKey = randomString()\r\n            addReviewToServer(reviewKey,{\r\n                id:state.reviews[state.reviews.length - 1].id + 1,\r\n                title:action.payload?.title,\r\n                text:action.payload?.text,\r\n            })\r\n            return{\r\n                ...state, \r\n                reviews:\r\n                    state.reviews.concat([{\r\n                        key:reviewKey,\r\n                        id:state.reviews[state.reviews.length - 1].id + 1,\r\n                        title:action.payload?.title,\r\n                        text:action.payload?.text,\r\n                    }])\r\n            }         \r\n            \r\n        case DELETE_REVIEW:\r\n            removeReviewFromServer(action.payload)\r\n            return{\r\n                ...state, \r\n                reviews:\r\n                    state.reviews = state.reviews.filter(item => item.key !== action.payload)\r\n            }            \r\n        case EDIT_REVIEW_DONE:\r\n            let editedReview = {\r\n                id: action.payload.id,\r\n                title: action.payload.title,\r\n                text: action.payload.text,\r\n            }\r\n            if(action.payload.key){\r\n                editReviewOnServer(action.payload.key, editedReview)\r\n            }else{\r\n                console.error('key is undefined')\r\n            }\r\n            return{\r\n                ...state, \r\n                reviews:\r\n                    state.reviews = state.reviews.map((item) => {\r\n                        if(item.id === action.payload.id){\r\n                            item.title = action.payload.title;\r\n                            item.text = action.payload.text;\r\n                            return item\r\n                        }else{\r\n                            return item\r\n                        }\r\n                    })\r\n            }\r\n               \r\n        \r\n        default: return state\r\n    }\r\n\r\n    \r\n    // if(action.type === LOAD_REVIEW_LIST){\r\n    //     return{\r\n    //         ...state, \r\n    //         reviews:\r\n    //             state.reviews.concat([action.payload])\r\n    //     }\r\n    // }else if(action.type === ADD_TO_REVIEW_LIST){\r\n    //     let last_id = state.reviews[state.reviews.length - 1].id;\r\n    //     let newReview = {\r\n    //         id:last_id + 1,\r\n    //         title:action.payload?.title,\r\n    //         text:action.payload?.text,\r\n    //     }\r\n    //     return{\r\n    //         ...state, \r\n    //         reviews:\r\n    //             state.reviews.concat([newReview])\r\n    //     }\r\n    // }\r\n\r\n    // return state\r\n}\r\n\r\n","C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\functions\\serverFunctions.js",[],"C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\Reviews.tsx",[],"C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\ReviewList.tsx",["61"],"import React from \"react\";\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch, connect } from \"react-redux\";\r\nimport { deleteReview, editReviewBegin } from \"./Redux/actions\";\r\nimport ReviewsListItem from \"./ReviewListItem\";\r\n\r\nconst ReviewList: React.FC = (state) => {\r\n  const list = useSelector(state => state.list.reviews);\r\n  const dispatch = useDispatch();\r\n  const deleteReviewHandler = (key) => {\r\n    dispatch(deleteReview(key));\r\n  };\r\n\r\n  const editReviewHandler = (id) => {\r\n      console.log('editReviewHandler',id)\r\n    dispatch(editReviewBegin(id));\r\n  };\r\n  console.log('list',list)\r\n  return (\r\n    <div className=\"list-group\">\r\n      {list?.map((item, index) => {\r\n        return (\r\n          <ReviewsListItem\r\n            id={item?.id}\r\n            title={item?.title}\r\n            text={item?.text}\r\n            key={index}\r\n            keyItem={item.key}\r\n            deleteReview={deleteReviewHandler}\r\n            editReview={editReviewHandler}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n// const mapStateToProps = (state = []) => {\r\n//   return {\r\n//     list: state.list.reviews,\r\n//   };\r\n// };\r\n\r\nexport default ReviewList;\r\n",["62","63"],"C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\ReviewForm.tsx",[],"C:\\projects\\react\\reviewForm\\reviewform\\src\\Reviews\\ReviewListItem.tsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":72,"nodeType":"70","messageId":"71","endLine":2,"endColumn":92},{"ruleId":"72","severity":1,"message":"73","line":3,"column":23,"nodeType":"70","messageId":"71","endLine":3,"endColumn":30},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'getReviewsFromServer' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'connect' is defined but never used.","no-global-assign","no-unsafe-negation"]